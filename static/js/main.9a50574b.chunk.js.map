{"version":3,"sources":["logo-transparent.png","Solo-2.jpg","user-flow.png","safety.png","value.png","App.js","serviceWorker.js","index.js"],"names":["module","exports","App","className","Navbar","fixed","bg","variant","Brand","href","Image","src","logo","height","Nav","Link","Jumbotron","fluid","id","style","backgroundImage","jumbotronBg","backgroundSize","Container","width","InputGroup","FormControl","placeholder","aria-label","aria-describedby","Append","Button","userFlow","value","safety","class","aria-hidden","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.9a50574b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo-transparent.23debf1a.png\";","module.exports = __webpack_public_path__ + \"static/media/Solo-2.5a720a5e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/user-flow.a152b254.png\";","module.exports = __webpack_public_path__ + \"static/media/safety.f7c21ae3.png\";","module.exports = __webpack_public_path__ + \"static/media/value.c64d19b5.png\";","import React from 'react';\nimport './App.css';\n\nimport Jumbotron from 'react-bootstrap/Jumbotron'\nimport Container from 'react-bootstrap/Container'\nimport Navbar from 'react-bootstrap/Navbar'\nimport InputGroup from 'react-bootstrap/InputGroup'\nimport FormControl from 'react-bootstrap/FormControl'\nimport Button from 'react-bootstrap/Button'\nimport Nav from 'react-bootstrap/Nav'\nimport Image from 'react-bootstrap/Image'\n\nimport logo from './logo-transparent.png'\nimport jumbotronBg from './Solo-2.jpg'\nimport userFlow from './user-flow.png'\nimport safety from './safety.png'\nimport value from './value.png'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navbar fixed='top' bg=\"dark\" variant=\"dark\">\n        <Navbar.Brand href=\"#top\"><Image src={logo} height=\"35px\"/></Navbar.Brand>\n        <Nav className=\"mr-auto\">\n          <Nav.Link href=\"#about\">About us</Nav.Link>\n          <Nav.Link href=\"#why\">Why us</Nav.Link>\n          <Nav.Link href=\"#safety\">Safety</Nav.Link>\n          <Nav.Link href=\"#giveaway\">Giveaway</Nav.Link>\n          <Nav.Link href=\"#top\">Register Now!</Nav.Link>\n        </Nav>\n      </Navbar>\n      <Jumbotron fluid id=\"top\" style={{backgroundImage: `url(${jumbotronBg})` , backgroundSize:'cover', height:'900px' }}>\n        <Container className=\"jumbotron-text-container\">\n          <Image src={logo} width=\"300px\"/><br/><br/>\n          <h1>Travel Solo Together</h1>\n          <p className=\"jumbotron-subheadings\">Find other solo travelers to hang out without pre-planning.</p>\n          <p className=\"jumbotron-subheadings\">Wherever you are, whenever you want.</p>\n          <br/>\n          <div className=\"jumbotron-register\">\n            <p>Register for our waitlist for early access to TravelHangouts and news about our updates and releases!</p>\n            <InputGroup className=\"mb-3\">\n              <FormControl\n                placeholder=\"Enter your email!\"\n                aria-label=\"Enter your email!\"\n                aria-describedby=\"basic-addon2\"\n              />\n              <InputGroup.Append>\n                <Button variant=\"success\">Register</Button>\n              </InputGroup.Append>\n            </InputGroup>\n          </div>\n         </Container>\n      </Jumbotron>\n      <Jumbotron className=\"jumbotron-insert\">\n        For solo travelers by solo travelers\n      </Jumbotron>\n      <Container id=\"about\" className=\"content-container\">\n        <h2>About TravelHangouts</h2>\n        <p>TravelHangouts is founded by solo travelers for solo travelers!</p>\n        <p>\n          Solo traveling gets lonely sometimes and we just want a quick hangout with someone now and then, but it is difficult to find people willing and able to especially in a foreign land where language and culture might be an issue.\n          Maybe we just need someone for a quick lunch, or to casually tour an area with, but we do not want to go through the trouble of finding people in advance and plan our schedules around a simple meetup.\n        </p>\n        <p>\n          And thus, we came up with a simple solution for this problem - TravelHangouts!\n          <br/>\n          TravelHangouts connects solo travelers from all over the world to let you meet up and hang out with other solo travelers that are craving just a little social interaction like you. \n        </p>\n        <p>\n          Using TravelHangouts is easy and intuitive, no need for troublesome scheduling and pre-planning: <br/><br/>\n          <Image src={userFlow} fluid />\n        </p>\n        <p>\n          <br/>\n          We hope to create a world where people can travel without being tied down while having access to a great community of globetrotters to hang out with if so desired. \n        </p>\n      </Container>\n      <Jumbotron className=\"jumbotron-insert\">\n        On-demand, No Hassle, No Commitment\n      </Jumbotron>\n      <Container id=\"why\" className=\"content-container\">\n        <h2>Why TravelHangouts</h2>\n        <p>\n          TravelHangouts is designed to maintain as much freedom and autonomy as possible for the solo traveler while still allowing them to meet with others to scratch that social itch.\n        </p>\n        <p>\n          <Image src={value} fluid />\n        </p>\n        <p>\n          By designing the app around on-demand, location based hangouts, we are able to bring solo travelers from all over together without sacrificing on the things that makes solo traveling appealing to us.\n        </p>\n      </Container>\n      <Jumbotron className=\"jumbotron-insert\">\n        Safety is our priority\n      </Jumbotron>\n      <Container id=\"safety\" className=\"content-container\">\n        <h2>Safety</h2>\n        <p>\n          We understand that safety is of utmost importance when it comes to meeting with others, hence we took time to come up with a set of features that helps to make TravelHangouts a safer space for all.\n        </p>\n        <p>\n          <Image src={safety} fluid />\n        </p>\n        <p>\n          With simple and intuitive safety features, we can keep the platform safe and ensure that you meet only people you are comfortable with!\n        </p>\n      </Container>\n      <Jumbotron className=\"jumbotron-insert\">\n        Hangout with only people you are comfortable with\n      </Jumbotron>\n      <Container id=\"giveaway\" className=\"content-container\">\n        <h2>Giveaways</h2>\n        <p>\n          Join our various giveaway campaigns on social media to stand a chance to win a trip to your dream destination!\n        </p>\n        <p>\n          Simply pre-register with us and tell us about why you love solo traveling and more about your dream solo traveling destination on various social media!\n        </p>\n        <p>\n          Find us on social media here!\n        </p>\n        <div className=\"social\">\n          <i class=\"fa fa-facebook-official\" aria-hidden=\"true\"></i>\n          <i class=\"fa fa-instagram\" aria-hidden=\"true\"></i>\n          <i class=\"fa fa-twitter-square\" aria-hidden=\"true\"></i>\n        </div>\n      </Container>\n      <Jumbotron className=\"jumbotron-insert\">\n        Pre-register now for a safe <br/>and intuitive way to hangout while traveling! \n        <Container>\n          <InputGroup className=\"mb-3\">\n            <FormControl\n              placeholder=\"Enter your email!\"\n              aria-label=\"Enter your email!\"\n              aria-describedby=\"basic-addon2\"\n            />\n            <InputGroup.Append>\n              <Button variant=\"success\">Register</Button>\n            </InputGroup.Append>\n          </InputGroup>\n        </Container>\n      </Jumbotron>\n      <footer>\n        Disclaimer : This website is created as a mock landing page for National University of Singapore's NUS Overseas College New Venture Creation Module<br/>\n        This is a student project and is not an actual commercial product.\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}